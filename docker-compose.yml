version: '3.8'

services:
  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: crisp-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - MONGODB_URI=${MONGODB_URI}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - JWT_SECRET=${JWT_SECRET}
      - BCRYPT_SALT_ROUNDS=12
      - LOG_LEVEL=info
    volumes:
      - ./backend/firebase-service-account.json:/app/firebase-service-account.json:ro
    networks:
      - crisp-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      timeout: 5s
      retries: 5
      start_period: 30s
      interval: 30s

  # Frontend React Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crisp-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - crisp-network

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: crisp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crisp-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}

  # Nginx Load Balancer (optional)
  nginx:
    image: nginx:alpine
    container_name: crisp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - crisp-network

networks:
  crisp-network:
    driver: bridge
    name: crisp-network

volumes:
  redis_data:
    name: crisp-redis-data